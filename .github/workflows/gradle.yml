# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle **Markdown Test**

on: [ push ]

jobs:
  Compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Compile with Gradle
        run: ./gradlew compileJava
      - uses: actions/cache@v2
        with:
          path: ./**/*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: INV= =
        run: export MY_JAR_NAME=`./gradlew printOutputJarName`
      - name: Show all folders
        run: ls -R
      - name: Show env
        run: env

  Test:
    needs: Compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v2
        with:
          path: ./**/*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Show all folders
        run: ls -R
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Test with Gradle
        run: ./gradlew test
      - uses: actions/upload-artifact@v2
        with:
          path: ./build/reports
          name: testReport
      - name: Show all folders
        run: ls -R


  Assemble:
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v2
        with:
          path: ./**/*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Show all folders
        run: ls -R
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Assemble with Gradle
        run: ./gradlew assemble
      - name: Show all folders
        run: ls -R
      - uses: actions/upload-artifact@v2
        with:
          path: ./build/libs/${{ env.MY_JAR_NAME }}
          name: buildJar

  Release:
    needs: Assemble
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: buildJar
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.MY_JAR_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

